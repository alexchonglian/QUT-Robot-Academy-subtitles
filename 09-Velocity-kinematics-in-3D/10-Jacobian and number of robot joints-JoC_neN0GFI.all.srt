1
00:00:03,810 --> 00:00:08,620
我们现在要谈谈雅可比矩阵的形状。机器人操纵器有
We're going to talk now about the shape of the Jacobian matrix. A robot manipulator has

2
00:00:08,620 --> 00:00:12,959
一般有N个关节，N可能是一个小数，机器人可能只有两个
in general got N joints, N could be a small number, the robot might have only two

3
00:00:12,959 --> 00:00:17,150
关节。机器人可能有100个关节。我想知道什么是影响
joints. The robots might have 100 joints. I want to understand what's the effect of

4
00:00:17,150 --> 00:00:22,230
机器人操纵器雅可比矩阵的形状上的关节数量，因为雅可比矩阵
the number of joints on the shape of the robot manipulator Jacobian matrix, because the Jacobian

5
00:00:22,230 --> 00:00:28,849
每个关节有一列。因此，N关节机器人具有N列的操纵器雅可比矩阵。
has one column per joint. So, an N joint robot has a manipulator Jacobian matrix with N columns.

6
00:00:28,849 --> 00:00:34,090
雅可比行列式对于空间速度矢量的每个元素具有一行。所以，对于动议
The Jacobian has one row for each element of the spatial velocity vector. So, for motion

7
00:00:34,090 --> 00:00:39,080
在三维空间中，空间速度矢量有6个元素-3个用于平移
in three dimensions, the spatial velocity vector has got 6 elements – 3 for translational

8
00:00:39,080 --> 00:00:43,800
速度和角速度为3。而且，这意味着雅可比矩阵总是具有
velocity and 3 for angular velocity. And, that means the Jacobian matrix always has

9
00:00:43,800 --> 00:00:48,970
六排。因此，机器人操纵器雅可比矩阵是6×N矩阵。
six rows. So, the robot manipulator Jacobian matrix is a 6 x N matrix.

10
00:00:48,970 --> 00:00:53,980
这个机器人只有4个关节，我们将其称为欠驱动机器人。而且，这意味着
This robot only has 4 joints and we call it an under actuated robot. And, that means that

11
00:00:53,980 --> 00:00:59,530
它的任务空间不包括所有的SE3集。虽然末端执行器可以实现
its task space doesn't cover all of the set SE3. Although the end effector can achieve

12
00:00:59,530 --> 00:01:05,800
在其工作空间范围内的所有位置，它无法实现所有可能的方向。
all positions within the limits of its works space, it's not able to achieve all possible orientations.

13
00:01:05,800 --> 00:01:10,359
因此，例如，当机器人在这样的配置中，它可以调整方向
So, for example, when the robot in a configuration like this, it can adjust the orientation of

14
00:01:10,359 --> 00:01:14,229
这样的抓手。但是，它不可能调整夹具的方向
the gripper like that. But, it's impossible for it to adjust the orientation of the gripper

15
00:01:14,229 --> 00:01:17,869
在那个方向或那个方向。
in that direction or in that direction.

16
00:01:18,640 --> 00:01:23,740
让我们考虑只有4个关节的机器人的情况。这通常被称为
Let's consider the case of a robot with only 4 joints. This is often referred to as an

17
00:01:23,740 --> 00:01:29,890
欠驱动机器人系统。在这种情况下，机器人Jacobian有6行4列。
under-actuated robotic system. In this case, the robot Jacobian has got 6 rows and 4 columns.

18
00:01:29,890 --> 00:01:35,060
雅可比不是方形的，因此，我们不能反转它。但这不一定
The Jacobian is not square, and therefore, we cannot invert it. But that's not necessarily

19
00:01:35,060 --> 00:01:40,689
一个问题。像这样的机器人无法围绕x轴或y轴旋转工具。它的
a problem. A robot like this is unable to rotate the tool about the x or y axis. It's

20
00:01:40,689 --> 00:01:45,880
只是它的构造方式。它不能以这种方式旋转工具。所以，我们可以罢工
just the way it's constructed. It cannot rotate the tool in that way. So, we can strike out

21
00:01:45,880 --> 00:01:51,679
这些元素是机器人的空间速度。因为我们无法控制这些周围的速度
these elements of the robot’s spatial velocity. Since we can't control velocity around these

22
00:01:51,679 --> 00:01:53,209
轴，让我们删除它们。
axes, let's just remove them.

23
00:01:53,209 --> 00:01:58,469
如果我这样做，那么我也应该删除雅可比矩阵中的相应行。
If I do that, then I should also remove the corresponding rows in the Jacobian matrix.

24
00:01:58,469 --> 00:02:04,969
而且，结果现在是一个4x4系统。现在，雅可比矩阵是可逆的。特定
And, the result now is a 4 x 4 system. And now, the Jacobian matrix is invertible. Given

25
00:02:04,969 --> 00:02:09,850
在期望的空间速度，现在是更小的空间速度矢量。我们可以计算
a desired spatial velocity, it's a smaller spatial velocity vector now. We can compute

26
00:02:09,850 --> 00:02:14,319
机器人关节角速度。我们需要获得那个空间速度。
the robot joint angle velocities. We need to obtain that spatial velocity.

27
00:02:14,319 --> 00:02:19,840
这是一个可能有100个关节的机器人。在这种情况下，操纵器雅可比是
Here's a robot that has perhaps 100 joints. In this case, the manipulator Jacobian is

28
00:02:19,840 --> 00:02:26,530
一个6x100矩阵。它不是正方形，我们无法反转它。我们可以计算一些东西
a 6 x 100 matrix. It's not square and we cannot invert it. We can compute something

29
00:02:26,530 --> 00:02:31,260
称为伪逆，并且通常用符号加表示。
called the pseudo-inverse and that's often denoted by the symbol plus.

30
00:02:31,260 --> 00:02:36,239
以这种方式计算伪逆。直到你，这看起来很直接
The pseudo-inverse is computed in this way. This looks quite straight forward until you

31
00:02:36,239 --> 00:02:41,790
提醒自己，这里的术语实际上是100x100矩阵，我们需要
remind yourself that the term inside here is in fact a 100 x 100 matrix and we need to

32
00:02:41,790 --> 00:02:47,750
反过来。从计算上讲，这不是一件简单的事情。但是，如果我们使用这个
invert that. And computationally, that's not a simple thing to do. However, if we use this

33
00:02:47,750 --> 00:02:52,769
伪逆，我们可以写出一个与所需空间速度相关的表达式
pseudo-inverse, we can write an expression that relates the desired spatial velocity

34
00:02:52,769 --> 00:03:00,549
机器人末端执行器对其100个关节中每个关节的所需速度。
of the robots end effector to the required velocity of each of its 100 joints.

35
00:03:00,549 --> 00:03:04,819
但是对于像这样的机器人来说，我们可以做更多的事情-一个拥有更多机器人的机器人
But we can do an extra thing as well in the case of a robot like this – a robot with more

36
00:03:04,819 --> 00:03:11,349
超过6个关节。我们可以在这里添加这个术语，我们将其称为零空间运动。
than 6 joints. We can add this term here and we refer to this as the null-space motion.

37
00:03:11,349 --> 00:03:16,599
它在这里预先乘以这个矩阵表达式，有效地过滤它，所以
It's pre-multiplied by this matrix expression here, which effectively filters it, so that

38
00:03:16,599 --> 00:03:21,980
此动作不会影响机器人末端执行器的姿势。我们可以使用这个动议，
this motion does not affect the pose of the robot end effector. We can use this motion,

39
00:03:21,980 --> 00:03:25,730
这不影响末端效应器的姿势来做一些改变形状的东西
which doesn't affect the end effector pose to do things like change the shape of the

40
00:03:25,730 --> 00:03:31,239
臂。我们也可以用它来做一些事情，比如将机器人关节从其极限移开
arm. We can also use it to do things like move a robot joint away from its limit towards

41
00:03:31,239 --> 00:03:33,560
其工作范围的中间部分。
the middle part of its working range.

42
00:03:33,560 --> 00:03:39,019
因此，我们使用这种额外的关节速度运动来改变手臂的形状，移动关节
So, we use this extra joint velocity motion to change the shape of the arm, move joints

43
00:03:39,019 --> 00:03:44,299
远离他们的极限。同时不影响末端效应器的姿势。这很漂亮
away from their limits. At the same time not affecting the end effector pose. It's a pretty

44
00:03:44,299 --> 00:03:50,879
整洁的把戏。该矩阵N被称为雅可比矩阵的零空间。它
neat trick. This matrix N is referred to as the null space of the Jacobian matrix. It

45
00:03:50,879 --> 00:03:55,700
是由机械手雅可比矩阵预乘的矢量集，给出一个
is the set of vectors that pre-multiplied by the manipulator Jacobian matrix, give a

46
00:03:55,700 --> 00:04:02,219
结果为零。在这种特殊情况下，如果机器人有100个关节，那么零空间
result of zero. In this particular case, if the robot had 100 joints, then the null space

47
00:04:02,219 --> 00:04:11,260
将是尺寸94.那是100减6.因此，N将是6×94元素矩阵。
would be of dimension 94. That's 100 minus 6. So, N would be a 6 x 94 element matrix.

48
00:04:11,260 --> 00:04:16,420
我将导入一个以3D方式移动的冗余机器人模型，这就是模型
I'm going to import the model of a redundant robot that moves in 3D and that's the model

49
00:04:16,420 --> 00:04:21,940
超3D。并且，我将要求一个有20个关节的机器人。举例来说，
hyper 3D. And, I'm going to ask for a robot with 20 joints. To illustrate, for example,

50
00:04:21,940 --> 00:04:26,190
我需要选择一组关节角度。我需要选择20个数字。我知道如果
I need to choose a set of joint angles. I need to choose 20 numbers. I know that if

51
00:04:26,190 --> 00:04:29,340
它们都等于零，机器人将处于奇点。
they're all equal to zero, the robot will be at a singularity.

52
00:04:29,340 --> 00:04:34,370
所以，我要做的是选择20个随机数。我将使用内置的MATLAB
So, what I'm going to do is to choose 20 random numbers. I'm going to use the MATLAB built-in

53
00:04:34,370 --> 00:04:39,650
功能兰特。所以，这是我的关节角度向量-范围内的20个随机数
function rand. So, this is my joint angle vector – 20 random numbers in the range

54
00:04:39,650 --> 00:04:46,039
0到1.并且，我可以为机器人绘制这个特定的关节角度配置，这是
0 to 1. And, I can plot this particular joint angle configuration for a robot and this is

55
00:04:46,039 --> 00:04:50,630
它看起来像什么。如果我可以稍微浏览一下，我们可以看到它
what it looks like. If I can just have a bit of a look around and we can see that it's

56
00:04:50,630 --> 00:04:55,139
指向略微向上，它有一些弯曲和扭曲。
pointing slightly upwards and it's got a few bends and twists in it.

57
00:04:55,139 --> 00:05:00,520
现在我有一组关节角度，我有一个机器人模型，我可以计算一个雅可比行列式
Now that I have the set of joint angles and I have a robot model, I can compute a Jacobian

58
00:05:00,520 --> 00:05:05,830
矩阵。而且，我们已经看到了如何为许多其他类型的机器人做到这一点。我使用了雅可比
matrix. And, we've seen how to do that for many other types of robots. I used the Jacobian

59
00:05:05,830 --> 00:05:11,430
方法和我传递一组关节角度。而且，这是雅可比矩阵。我们可以看到
method and I pass in the set of joint angles. And, this is the Jacobian matrix. We can see

60
00:05:11,430 --> 00:05:16,250
它有6行，它有20列，因为有20个关节。
that it's got 6 rows and it's got 20 columns because there are 20 joints.

61
00:05:16,250 --> 00:05:20,639
如果我试图反转这个矩阵，我会得到一个错误，因为矩阵不是
If I tried to invert this matrix, I'm going to get an error because the matrix is not

62
00:05:20,639 --> 00:05:24,910
广场。MATLAB告诉我，我不能这样做，但我可以计算伪逆。和，
square. MATLAB is telling me I can't do that but I can compute the pseudo-inverse. And,

63
00:05:24,910 --> 00:05:31,000
这是使用MATLAB内置函数pinv计算的，并传入雅可比矩阵。
that's computed using the MATLAB built-in function pinv, and pass in the Jacobian matrix.

64
00:05:31,000 --> 00:05:36,789
而且，这是伪逆的结果。而且，我们可以看到我们在工作区中
And, this is the result of the pseudo-inverse. And, we can see that we have here in the workspace

65
00:05:36,789 --> 00:05:41,660
现在是一个20x6矩阵，雅可比矩阵的伪逆。
now a 20 x 6 matrix, the pseudo-inverse of the Jacobian matrix.

66
00:05:41,660 --> 00:05:46,889
现在，我们讨论了零空间运动。并且，为了计算零空间运动，
Now, we talked about the null space motion. And, in order to compute the null space motion,

67
00:05:46,889 --> 00:05:52,749
我们需要计算雅可比矩阵本身的零空间，MATLAB具有这样做的功能。
we need to compute the null space of the Jacobian matrix itself and MATLAB has the function to do that.

68
00:05:52,750 --> 00:05:58,620
它是函数null并且我传入雅可比矩阵，这里是零空间矩阵。
It's the function null and I pass in the Jacobian matrix and here is the null space matrix.

69
00:05:58,620 --> 00:06:04,669
零空间矩阵有20行，只有14列。14来自20，这是
The null space matrix has 20 rows and only 14 columns. 14 comes from 20, which is the

70
00:06:04,669 --> 00:06:09,879
原雅可比列中的列数减去6.而6是该原始的等级
number of columns in the original Jacobian minus 6. And 6 is the rank of that original

71
00:06:09,879 --> 00:06:15,520
雅可比。这是雅可比矩阵中唯一列的数量。所以，有6个独特的
Jacobian. That's the number of unique columns in the Jacobian matrix. So, there were 6 unique

72
00:06:15,520 --> 00:06:21,699
列，雅各比派的零空间中存在14列。14加
columns and there were 14 columns that exist in the null space of that Jacobian. 14 plus

73
00:06:21,699 --> 00:06:25,610
6等于20，原始列数。
6 equals 20, the original number of columns.

74
00:06:25,610 --> 00:06:29,400
让我们总结一下机器人雅可比矩阵可以具有的一些不同形状。对于
Let's summarize some of the different shapes that a robot Jacobian matrix can have. For

75
00:06:29,400 --> 00:06:33,780
在一个带有6个关节的机器人的情况下，我们说机器人是完全启动的。雅可比人
the case of a robot with 6 joints, we say that the robot is fully actuated. The Jacobian

76
00:06:33,780 --> 00:06:39,270
将是一个方形的6x6矩阵。并且具有6个关节的机器人能够完全访问所有
will be a square 6 x 6 matrix. And a robot with 6 joints is able to fully access all

77
00:06:39,270 --> 00:06:44,210
在SE3内构成。这意味着，任何位置和任意
poses within SE3. That means, any position and any arbitrary

78
00:06:44,210 --> 00:06:50,090
取向。对于少于6个关节的机器人的情况，我们称之为
orientation. For the case of a robot with less than 6 joints, which we refer to as an

79
00:06:50,090 --> 00:06:56,990
欠驱动机器人，雅可比行星将是一个6xN矩阵。它将拥有比列数更多的行。
under-actuated robot, the Jacobian will be a 6 x N matrix. It will have more rows than it has columns.

80
00:06:56,990 --> 00:07:02,460
这意味着机器人无法访问SE3中的所有可能姿势。并且，按顺序
This means that the robot cannot access all possible poses within a SE3. And, in order

81
00:07:02,470 --> 00:07:07,509
为了控制目的而使用雅可比行列式，我们需要将它放在一边，我们就是这样做的
to use the Jacobian for control purposes, we need to square it up and we do that by

82
00:07:07,509 --> 00:07:12,509
去除一些空间自由度。我们消除雅可比矩阵中的一些行
removing some spatial degrees of freedom. We eliminate some rows in the Jacobian matrix

83
00:07:12,509 --> 00:07:19,210
这样它就变成了一个5x5或4x4雅可比矩阵，然后是可逆的。在这种情况下
so that it becomes a 5 x 5 or 4 x 4 Jacobian matrix which is then invertible. In the case

84
00:07:19,210 --> 00:07:24,550
一个超过6个关节的机器人，我们称之为过度驱动的机器人
of a robot with more than 6 joints, which we refer to as an over actuated robot, the

85
00:07:24,550 --> 00:07:29,819
雅可比矩阵的列数多于行数。它是一个6xN矩阵。
Jacobian matrix has more columns than it has rows. It's a 6 x N matrix.

86
00:07:29,819 --> 00:07:34,930
为了使用雅可比矩阵进行控制，我们采用伪逆。该
In order to use the Jacobian matrix for control purposes, we take its pseudo-inverse. The

87
00:07:34,930 --> 00:07:39,190
像这样的机器人的巨大优势是我们可以考虑有备用关节和
great advantage of a robot like this is that we can think about having spare joints and

88
00:07:39,190 --> 00:07:43,629
我们可以使用其中一些备用关节来做我们称之为零空间运动的事情。而且，虽然
we can use some of these spare joints to do what we call null space motion. And, while

89
00:07:43,629 --> 00:07:47,780
我们保持无效的姿势不变，我们可以调整所有的关节来改变
we hold the ineffective pose constant, we can adjust all of the joints to change the

90
00:07:47,780 --> 00:07:51,619
手臂的形状或移动关节远离运动限制。
shape of the arm or move the joints away from motion limits.

