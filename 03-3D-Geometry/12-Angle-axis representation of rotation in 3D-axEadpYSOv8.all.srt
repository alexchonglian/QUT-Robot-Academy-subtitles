1
00:00:03,679 --> 00:00:08,599
我们可以考虑这两个帧之间关系的另一种方式，即帧A和帧B，
Another way we can think about the relationship between these two frames, frame A and frame B,

2
00:00:08,600 --> 00:00:15,580
是通过围绕空间中某个任意轴的单一旋转来关联它们。所以
is that they are related by a single rotation about some arbitrary axis in space. So, the

3
00:00:15,590 --> 00:00:20,360
挑战变得确定这个旋转轴是什么，我们去的向量
challenge becomes to determine what is this axis of rotation, the vector we going

4
00:00:20,360 --> 00:00:26,150
定义是v和我们要去的那个向量周围的旋转量是多少
to define is v and what is the amount of rotation around that vector, which we’re going to

5
00:00:26,150 --> 00:00:30,510
叫Theta。所以问题是发现什么是v，什么是Theta，允许
call Theta. So the problem is to discover what is v, and what is Theta, that allows

6
00:00:30,510 --> 00:00:35,680
我们将框架A旋转到框架B.
us to rotate frame A into frame B.

7
00:00:35,680 --> 00:00:40,410
为了找到我们旋转的轴，有一个关键的观察，那就是
In order to find the axis around which we rotate there is a key observation, and that

8
00:00:40,410 --> 00:00:46,610
是我们要旋转的轴必须通过旋转不变。
is that the axis around which we are going to rotate must be unchanged by the rotation.

9
00:00:46,610 --> 00:00:53,059
位于旋转轴上的任何点都将通过旋转保持不变。这意味着
Any point that lies on the rotation axis will be unchanged by rotation. That implies that

10
00:00:53,059 --> 00:01:00,149
旋转轴必须是矩阵R的特征向量。旋转矩阵有三个
the rotation axis must be an eigenvector of the matrix R. A rotation matrix has got three

11
00:01:00,149 --> 00:01:05,030
特征向量。有一个特征向量可以保证具有真实的元素
eigenvectors. There is one eigenvector which is guaranteed to have elements that are real

12
00:01:05,030 --> 00:01:12,970
数字和它对应于1的特征值。有两个复杂的特征向量和
numbers and it corresponds to the eigenvalue of 1. There are two complex eigenvectors and

13
00:01:12,970 --> 00:01:20,080
它们对应于作为旋转角θ的函数的复特征值。
they correspond to complex eigenvalues which are functions of the rotation angle Theta.

14
00:01:20,080 --> 00:01:24,570
为了说明这一点，我将创建一个旋转矩阵。这并不特别重要
To illustrate this, I am going to create a rotation matrix. It doesn't particularly matter

15
00:01:24,570 --> 00:01:33,170
价值是什么。我将使用欧拉角创建它。0.1,0.2,0.3。那里
what the value is. I am going to create it using Euler angles. 0.1, 0.2, 0.3. And there

16
00:01:33,170 --> 00:01:41,340
它是。通过绘制它，我可以看到那个方向是什么样的。在那里我们看到旋转
it is. And I can see what that orientation looks like by plotting it. There we see rotated

17
00:01:41,340 --> 00:01:44,650
坐标对应于该旋转矩阵的帧。
coordinate frame corresponding to this rotation matrix.

18
00:01:44,650 --> 00:01:50,970
现在，我将查看此旋转矩阵的特征值。我们在那里看到了
Now, I am going to look at the eigenvalues of this rotation matrix. We see that there

19
00:01:50,970 --> 00:01:57,420
是3个特征值，我们期望它是一个3x3矩阵，最后一个特征值是相等的
are 3 eigenvalues, we'd expect that since it's a 3x3 matrix and the last eigenvalue is equal

20
00:01:57,420 --> 00:02:04,540
一个。我也可以通过询问两个输出参数来查看特征向量
to one. I can look at the eigenvectors as well by asking for two output arguments from

21
00:02:04,540 --> 00:02:13,159
eig功能。现在我们在矩阵v中看到，矩阵v的每列是特征向量
the eig function. And now we see in the matrix v, each column of matrix v is an eigenvector

22
00:02:13,159 --> 00:02:19,079
我们对第三个特征向量感兴趣，因为第三个特征值等于
and we're interested in the third eigenvector because the third eigenvalue was equal to

23
00:02:19,079 --> 00:02:24,739
一，我们可以说第三个特征向量是真实的。所有元素的虚构部分
one, and we can say that this third eigenvector is real. The imaginary part of all the elements

24
00:02:24,739 --> 00:02:26,909
等于零。
are equal to zero.

25
00:02:26,909 --> 00:02:32,090
为了找到旋转量以及旋转轴，我们将使用
In order to find the amount of rotation as well as the axis of rotation, we would use

26
00:02:32,090 --> 00:02:39,480
工具箱函数tr2angvec并传入我们感兴趣的旋转矩阵，和
the Toolbox function tr2angvec and pass in the rotation matrix we're interested in, and

27
00:02:39,480 --> 00:02:46,010
它告诉它我们需要围绕这个特定向量旋转0.44弧度。现在，
it tells it that we need a rotation of 0.44 radians around this particular vector. Now,

28
00:02:46,010 --> 00:02:56,249
我可以通过提供两个输出参数将它们放入变量中;tr2angvec，
I can get it to put those into variables by providing two output arguments; tr2angvec,

29
00:02:56,249 --> 00:03:01,969
并且外向变量Theta已设置为0.4466且输出变量v为
and the outward variable Theta has been set to 0.4466 and the output variable v has being

30
00:03:01,969 --> 00:03:08,079
设置为将围绕其旋转的向量。
set to the vector around which that rotation would occur.

31
00:03:08,079 --> 00:03:15,400
所以问题归结为找到矩阵R的特征值和特征向量。特征向量
So the problem comes down to finding the eigenvalues and eigenvectors of the matrix R. The eigenvector

32
00:03:15,400 --> 00:03:22,040
对应于一个特征值的是旋转轴V并且来自复特征向量，
corresponding to the eigenvalue of one is a rotation axis V and from the complex eigenvectors,

33
00:03:22,040 --> 00:03:27,169
这是Theta的一个功能，我们可以确定我们需要的旋转角度。
which are a function of Theta, we can determine the rotation angle that we require.

34
00:03:27,169 --> 00:03:32,579
现在，让我们考虑我们想做反过来;我们有旋转角度Theta和
Now, let's consider we want to do the inverse; that we have the rotation angle Theta and

35
00:03:32,579 --> 00:03:38,599
我们有一个我们旋转的矢量叫做v，我们想要找到旋转矩阵。
we have the vector about which we rotate called v, and we want to find the rotation matrix.

36
00:03:39,220 --> 00:03:46,400
我们需要的方程是所谓的Rodriguez方程，它将R与v和Theta联系起来。
And the equation we need is the so-called Rodriguez Equation and it relates R to v and Theta.

37
00:03:47,320 --> 00:03:53,420
逆操作由函数angvec2r执行，转换角度和矢量
The inverse operation is performed by the function angvec2r, converts an angle and vector

38
00:03:53,430 --> 00:04:00,400
表示旋转矩阵。我传递了旋转量，然后传入向量
representation to a rotation matrix. I pass in the rotation amount and I pass in the vector

39
00:04:00,400 --> 00:04:05,699
这里是旋转矩阵，它与旋转矩阵完全相同
and here is the rotation matrix, and it's exactly the same as the rotation matrix that

40
00:04:05,699 --> 00:04:08,019
我开始了。
I started with.

41
00:04:08,019 --> 00:04:13,229
你会注意到这里的矩阵是一个偏斜对称矩阵，这就是类型
You’ll notice that the matrix in here is a skew symmetric matrix and this is the type

42
00:04:13,229 --> 00:04:17,530
我们已经遇到的矩阵，我们将会遇到其他几次
of matrix that we've encountered already, and we will encounter a few other times in

43
00:04:17,530 --> 00:04:18,840
这个课程讲座。
this course of lectures.

