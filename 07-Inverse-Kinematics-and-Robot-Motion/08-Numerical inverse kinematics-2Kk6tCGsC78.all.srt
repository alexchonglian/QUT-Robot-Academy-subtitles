1
00:00:03,649 --> 00:00:08,750
让我们看看确定我们的简单双链机器人的逆运动学
Let's have a look at determining the inverse kinematics of our simple two link robot using

2
00:00:08,750 --> 00:00:10,940
数值方法。
a numerical approach.

3
00:00:10,940 --> 00:00:18,770
我们现在要加载我们的两个链接机器人的工作空间。那就是
We're going to load now, into the workspace a model of our two link robot. And that's

4
00:00:18,770 --> 00:00:25,880
工作区变量P2，是这个新的机器人，我们可以绘制配置
the workspace variable P2, is this new robot and we can plot the configuration for the

5
00:00:25,880 --> 00:00:30,820
机器人为零关节角度，此功能还定义了工作空间变量QZ，其中
robot for zero joint angles, this function also defines a workspace variable QZ, which

6
00:00:30,820 --> 00:00:38,020
包含零零值，这就是机器人在零角度配置中的样子。
contains the value of zero zero and that's what the robot looks like in the zero angle configuration.

7
00:00:39,180 --> 00:00:44,390
现在我要为这个机器人定义一个理想的末端执行器位置，我将要定义
Now I'm going to define a desired end effector position for this robot and I'm going to define

8
00:00:44,390 --> 00:00:49,460
只是翻译，它将在X方向上成为一个，在Y方向上成为一个
simply the translation and it's going to be one in the X direction, one in the Y direction

9
00:00:49,460 --> 00:00:52,180
在Z方向上为零。
and zero in the Z direction.

10
00:00:52,180 --> 00:00:58,210
请记住，这个机器人只有两个关节，他只能在XY平面上移动
Remember that this robot has only got two joints and he can only move in the XY plane

11
00:00:58,210 --> 00:01:02,790
所以对我来说，为Z坐标赋值是没有意义的
so it doesn’t make sense for me to put a value for the Z co-ordinate that's anything

12
00:01:02,790 --> 00:01:10,650
但是为零。机器人无法实现Z不等于零的任何位置。
but zero. The robot is incapable of achieving any position where Z is not equal to zero.

13
00:01:10,650 --> 00:01:17,120
这是均匀变换，代表所需的位置。
And here is the homogeneous transformation, representing the desired position.

14
00:01:17,120 --> 00:01:24,150
现在为了以数字方式确定反向运动学，我写下了我们的对象而我
Now in order to determine the inverse kinematics numerically, I write down our object and I'm

15
00:01:24,150 --> 00:01:30,080
要使用ikine方法，它代表InverseKinematics。而这种特殊的方法
going to use the method ikine, it stands for Inverse Kinematics. And this particular method

16
00:01:30,080 --> 00:01:36,180
执行数值解决方案以确定逆运动学。我通过的第一个论点
performs a numerical solution to determine the inverse kinematics. First argument I pass

17
00:01:36,180 --> 00:01:43,390
in是我们刚刚定义的期望的末端效应器姿势T，我将把它放在最初的位置
in is the desired end effector pose T that we've just defined and I'm going to put in the initial

18
00:01:43,390 --> 00:01:50,250
我将用于寻找最佳关节角度以实现该姿势的关节角度。
joint angles that I'm going to use in the search for the optimal joint angles to achieve that pose.

19
00:01:50,720 --> 00:01:56,640
最后一个论点有点复杂。这就是我所说的“面具矩阵”及其轴
The last argument is a little bit more complex. It's what I call a "Mask Matrix" and its axis

20
00:01:56,640 --> 00:02:01,850
元素矩阵和前两个元素是1，后四个元素是零。
element matrix and the first two elements are ones and the last four elements are zeros.

21
00:02:01,850 --> 00:02:08,360
而这告诉ikine函数只是尝试匹配末端效应器X和
And what this is telling the ikine function is only try and match the end effector X and

22
00:02:08,360 --> 00:02:13,779
Y位置，不要试图匹配Z坐标，不要打扰尝试匹配
Y position, don't bother trying to match the Z co-ordinate, don't bother trying to match

23
00:02:13,779 --> 00:02:19,569
方向。因为这个机器人只有两个自由度，所以它只能实现
the orientation. Because this robot's only got two degrees of freedom, it can only achieve

24
00:02:19,569 --> 00:02:25,279
在它的末端效应器姿势中有两个约束，我选择那些约束作为它的X.
two constraints in its end effector pose and I've chosen those constraints to be its X

25
00:02:25,279 --> 00:02:31,650
位置及其Y位置。我不关心末端执行器的任何其他元素
position and its Y position. I don't care about any other elements of the end effector

26
00:02:31,650 --> 00:02:39,250
姿势。我点击了输入，解决方案又回来了Pi和减去Pi。好吧，让我们描绘一下，
pose. I hit enter and the solution has come back a Pi and minus Pi. Well let's plot that,

27
00:02:41,200 --> 00:02:49,639
图Q和那里我们看到了机器人所需的配置，以实现特定的末端执行器
plot Q and there we see the desired configuration of the robot to achieve the particular end effector

28
00:02:49,639 --> 00:02:51,439
我要求的位置。
position that I asked for.

29
00:02:51,439 --> 00:02:55,120
让我们从上面看看那个机器人，我们可以非常清楚地看到最终效应器
Let's just have a look at that robot from above and we can see very clearly, the end effector

30
00:02:55,120 --> 00:03:01,829
已经移动到X方向上的一个位置和Y方向上的一个位置。
has moved to the position one in the X direction and one in the Y direction.

31
00:03:01,829 --> 00:03:07,620
现在让我们看看我们是否能够找到具有相同末端效应器的机器人的另一种配置
Now let's see if we can find another configuration of the robot that has got the same end effector

32
00:03:07,620 --> 00:03:12,349
姿势。我们要做的是我们将回到我们的反向运动学，我们就是
pose. What we're going to do is we're going to go back to our inverse kinematics and we're

33
00:03:12,349 --> 00:03:18,659
要给出不同的初始条件。我将以Q1等于开始搜索
going to give a different initial condition. I'm going to start the search with Q1 equal

34
00:03:18,659 --> 00:03:26,370
减去一个辐射而不是零辐射并运行求解器，我们再来一次
to minus one radiance instead of zero radiance and run the solver and once again we come

35
00:03:26,370 --> 00:03:30,319
回到我以前完全相同的解决方案。
back to exactly the same solution that I had before.

36
00:03:30,319 --> 00:03:37,419
让我们尝试一个不同的初始条件，让我们尝试将这个设置为减1和
Let's try an different initial condition, let's try setting this one to minus one and

37
00:03:37,419 --> 00:03:45,459
嘿，现在我们有一个不同的解决方案，让我们绘制解决方案的样子，
hey, now we have a different solution and let's plot what that solution looks like,

38
00:03:45,459 --> 00:03:52,329
我们可以看到它再一次达到了理想的最终效应器位置，一个在
we can see that once again it has achieved the desired end effector position, one in the

39
00:03:52,329 --> 00:03:56,239
Y方向上的X方向，但机器人的配置现在不同。
X direction one in the Y direction, but the configuration of the robot is now different.

40
00:03:56,239 --> 00:04:02,139
您会看到确定将实现第二种配置的初始关节角度
You see that determining the initial joint angles that would achieve that second configuration

41
00:04:02,139 --> 00:04:07,480
不是直截了当，它需要一点点的反复试验才能引导
was not straight forward, it required a little bit of trial and error in order to guide the

42
00:04:07,480 --> 00:04:13,139
算法，找到这个替代解决方案。
algorithm, to finding this alternative solution.

43
00:04:13,139 --> 00:04:18,329
现在让我们看看为这六个自由度执行数值逆运动学
Now let's look at performing numerical inverse kinematics for this six degree of freedom

44
00:04:18,329 --> 00:04:21,259
机器人，三维移动。
robot, which moves in three dimensions.

45
00:04:21,259 --> 00:04:27,490
我们要做的第一件事是加载Puma机器人的模型，我们现在有一个变量
The first thing we're going to do is to load a model of the Puma robot, we now have a variable

46
00:04:27,490 --> 00:04:33,729
在我们的工作空间中，我将使用它在零角度配置中绘制机器人
in our workspace and I'm going to plot the robot in its zero angle configuration, using

47
00:04:33,729 --> 00:04:40,810
工作区变量QZ由MDLPuma560脚本定义。在这里我们看到了
the workspace variable QZ which was defined by the MDL Puma 560 script. And here we see

48
00:04:40,810 --> 00:04:45,199
机器人在它的零角度姿势。接下来我要做的就是定义我的姿势
the robot in it's zero angle pose. Next thing I'm going to do is define the pose that I

49
00:04:45,199 --> 00:04:51,349
希望最终效应器采用。它的平移分量为0.6英寸
want the end effector to adopt. And it's going to have a translational component of 0.6 in

50
00:04:51,349 --> 00:04:57,090
X方向，Y方向0.2，Z方向零，我要改变
the X direction, 0.2 in the Y direction, zero in the Z direction and I'm going to change

51
00:04:57,090 --> 00:05:03,430
末端执行器的方向。它的滚动角为零，俯仰角为180度
the orientation of the end effector. It's got a roll angle of zero, pitch angle of 180 degrees

52
00:05:03,430 --> 00:05:09,830
并且偏航角度为180度，指定度数，这是均匀变换
and a yaw angle of 180 degrees, specify degrees and this is the homogeneous transformation

53
00:05:09,830 --> 00:05:13,870
代表我想要机器人采用的姿势。
representing the pose I'd like the robot to adopt.

54
00:05:13,870 --> 00:05:19,520
我将启用情节保持，现在我将绘制特定的姿势，所以我们
I'm going to enable plot hold and now I'm going to plot that particular pose, so we

55
00:05:19,520 --> 00:05:24,810
可以看出机器人现在是否正确以及我希望它采用的姿势。
can see whether the robot is right now and the pose that I would like it to adopt.

56
00:05:24,810 --> 00:05:29,759
现在我要计算逆运动学，这次我将以数字方式进行计算。
Now I'm going to compute the inverse kinematics and this time I'm going to do it numerically.

57
00:05:29,759 --> 00:05:36,979
我在P560对象上使用了稍微不同的方法，我使用了ikine方法，我通过了
And I use a slightly different method on the P560 object, I use the method ikine, I pass

58
00:05:36,979 --> 00:05:41,720
在姿势我想要机器人采用，我通过初始的一组关节角度
in the pose I'd like the robot to adopt and I pass in the initial set of joint angles

59
00:05:41,720 --> 00:05:47,080
对于数值算法，我只是将它们全部归零。这不是特别的
for the numerical algorithm and I'm just going to make them all zero. It's not particularly

60
00:05:47,080 --> 00:05:51,900
富有想象力，但我们会看到会发生什么。好的算法已经完成并计算了
imaginative, but we'll see what happens. Okay the algorithm has completed and it's computed

61
00:05:51,900 --> 00:05:59,780
一组关节角度。如果我现在在该配置中绘制机器人，我们可以看到
a set of joint angles. If I now plot the robot in that configuration, we can see that the

62
00:05:59,780 --> 00:06:04,310
机器人末端执行器的位置是蓝色坐标系的原点
position of the robot end effector is at the origin of the blue co-ordinate frame that

63
00:06:04,310 --> 00:06:09,699
我画了并且机器人的末端执行器的X，Y和Z轴平行于X，
I drew and that the X, Y and Z axis of the robot's end effector are parallel to the X,

64
00:06:09,699 --> 00:06:13,979
我想要的坐标框架的Y轴和Z轴。
Y and Z axes of the co-ordinate frame that I desire.

65
00:06:13,979 --> 00:06:18,560
机器人的配置看起来有点尴尬，这是因为数字
The robot's configuration looks a little bit awkward, that's because with the numerical

66
00:06:18,560 --> 00:06:24,159
技术，我无法明确控制它采用的姿势。我需要尝试一些不同的东西
technique, I cannot explicitly control the pose that it adopts. I need to try some different

67
00:06:24,159 --> 00:06:28,569
初始条件，以便可能得到机器人肘部的配置
initial conditions in order to perhaps get a configuration where the robot's elbow is

68
00:06:28,569 --> 00:06:33,849
起来。你会发现这里有一条红色的错误信息，没什么好担心的，就是这样
up. You'll notice an error message here in red, that's nothing to be worried about, it's

69
00:06:33,849 --> 00:06:39,639
因为我选择的初始关节角度集全部为零，导致机器人配置
because the initial set of joint angles that I chose, all zeros, results in a robot configuration

70
00:06:39,639 --> 00:06:44,439
我们将要讨论的是奇异和奇异的配置
that is singular and singular configurations is something that we're going to discuss along

71
00:06:44,439 --> 00:06:48,699
在接下来的两个讲座中与雅各比人合作。
with Jacobians in the next two lectures.

72
00:06:48,699 --> 00:06:52,909
用数字方式求解逆运动学看起来很容易做到
Solving the inverse kinematics numerically looks like a pretty easy thing to do, are

73
00:06:52,909 --> 00:06:55,719
有什么缺点吗？那么有一些。
there any drawbacks? Well there are a few.

74
00:06:55,719 --> 00:07:00,229
首先，选择一套好的初始联合坐标非常重要。如果
First of all it's important to choose a good initial set of joint co-ordinates. If the

75
00:07:00,229 --> 00:07:05,300
联合坐标与实现所需的实际联合坐标相差太远
joint co-ordinates are too far away from the actual joint co-ordinates required to achieve

76
00:07:05,300 --> 00:07:11,060
然后，数值解可能不会收敛。另一个问题是
the pose then the numerical solution may not in fact converge. Another problem is that

77
00:07:11,060 --> 00:07:17,569
我们无法保证特定的机器人配置。找到的机器人配置取决于
we can't guarantee a particular robot configuration. The robot configuration that is found, depends

78
00:07:17,569 --> 00:07:21,650
在选择的初始联合坐标上，数值算法将开始
on the initial joint co-ordinates that are chosen, so the numerical algorithm will start

79
00:07:21,650 --> 00:07:26,110
您可以使用一组特定的关节角度来执行优化
with a particular set of joint angles that you give it and it will perform the optimization

80
00:07:26,110 --> 00:07:31,659
直到它匹配所需的末端效应器姿势。它结束的特定配置
until it matches the desired end effector pose. The particular configuration that it ends

81
00:07:31,659 --> 00:07:36,990
取决于你最初选择的联合坐标。现在重要的是，你做不到
up with, depends on your initial choice of joint co-ordinates. Now importantly, you cannot

82
00:07:36,990 --> 00:07:43,249
使用分析解决方案尽可能地控制机器人配置。
control the robot configuration as you can with the analytic solution.

83
00:07:43,249 --> 00:07:48,620
最后，数值解决方案的计算成本可能很高。这是一个迭代
And finally the numerical solution can be computationally expensive. It's an iterative

84
00:07:48,620 --> 00:07:54,050
算法和迭代次数在某种程度上取决于你的初始关节有多好
algorithm and the number of iterations depends in some way on how good your initial joint

85
00:07:54,050 --> 00:07:59,379
坐标是。因此，如果您希望这个实时运行，以便能够计算逆
co-ordinates are. So if you wanted this to run in real time, to be able to compute inverse

86
00:07:59,379 --> 00:08:05,050
运动学说在千分之一秒，然后数值算法可能不是
kinematics say in a thousandth of a second, then a numerical algorithm may not be the

87
00:08:05,050 --> 00:08:06,710
最合适的方式去。
most appropriate way to go.

