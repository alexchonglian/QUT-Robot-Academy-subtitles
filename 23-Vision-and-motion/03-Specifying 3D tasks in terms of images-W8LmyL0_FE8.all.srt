1
00:00:03,220 --> 00:00:07,060
我们希望机器人做的任务是将这根杆的末端定位到尖端
The task that we want the robot to do is to position the end of this rod to the tip of

2
00:00:07,069 --> 00:00:11,639
这根棒，对我来说这是一件相对容易的事情。我用双眼
this rod, and that’s a relatively easy thing for me to do. I’m using both my eyes to

3
00:00:11,639 --> 00:00:16,840
引导我的手，以实现这一特定的动作。但是，如果我只使用一只眼睛
guide my hand in order to achieve that particular motion. However, if I’m only using one eye

4
00:00:16,840 --> 00:00:22,300
存在一些模棱两可的可能性。仅使用一只眼睛，实际上非常困难
there is a potential for some ambiguity. Using just a single eye, it’s actually quite difficult

5
00:00:22,300 --> 00:00:28,130
让我确定沿轴离开我眼睛的距离。为了要达到
for me to determine the distance along the axis away from my eye. In order to achieve

6
00:00:28,130 --> 00:00:32,710
这个定位任务在三个维度上，我实际上需要使用两个摄像头视图和
this positioning task in three dimensions, I actually need to use two camera views and

7
00:00:32,710 --> 00:00:35,430
摄像机需要处于不同的视点。
the cameras need to be at different viewpoints.

8
00:00:35,430 --> 00:00:40,730
这是我们刚看到的问题的简单图形表示。我们
Here is a simple graphical representation of the problem that we just looked at. We

9
00:00:40,730 --> 00:00:45,750
有固定的蓝色物体，我们有移动的红色物体，我们
have the blue object which is fixed, and we have the red object which is moving, and we

10
00:00:45,750 --> 00:00:50,680
想要将红色物体的尖端带到蓝色物体的尖端。这很明显
want to bring the tip of the red object to the tip of the blue object. And this is clearly

11
00:00:50,680 --> 00:00:56,629
在三维空间中发生的任务。现在，考虑我们有一个摄像头观察
a task that occurs in three-dimensional space. Now, consider that we have a camera observing

12
00:00:56,629 --> 00:01:02,020
任务，我们在这里看到相机的视图。我们看到蓝色物体和红色物体。
the task and we see here the camera’s view. We see the blue object and the red object.

13
00:01:02,020 --> 00:01:07,310
因此，当任务完成后，我们会在相机的眼睛视图中看到它的样子，
So when the task is accomplished, we see what it looks like in the camera’s eye view,

14
00:01:07,310 --> 00:01:12,619
并且我们看到在这个二维投影中发生的任务的尖端
and we see that in this two-dimensional projection of the task occurring that the tip of the

15
00:01:12,619 --> 00:01:18,180
红色物体被带到蓝色物体的尖端。所以这个任务正在实现
red object is brought to the tip of the blue object. So the task is being achieved in the

16
00:01:18,180 --> 00:01:22,000
图像以及在三维空间中实现。
image as well as being achieved in three-dimensional space.

17
00:01:22,000 --> 00:01:24,710
它并不那么简单。
It’s not quite that simple.

18
00:01:24,710 --> 00:01:31,659
现在考虑我不正确地执行任务。我将红色物体带到这个位置。现在，
Consider now that I perform the task incorrectly. I bring the red object to this position. Now,

19
00:01:31,659 --> 00:01:36,180
任务尚未实现：红色物体的尖端未达到尖端
the task has not been achieved: the tip of the red object has not met the tip of the

20
00:01:36,180 --> 00:01:42,820
三维空间中的蓝色物体。但在图像平面中，任务看起来像它
blue object in three-dimensional space. But in the image plane, the task looks like it

21
00:01:42,820 --> 00:01:49,799
已经实现了。我们可以说在这个水平方向上，我们可以观察到运动
has been achieved. We can say that in this horizontal direction, we can observe the motion

22
00:01:49,799 --> 00:01:56,259
红色物体。但是在远离相机的方向上，我们无法观察到
of the red object. But in this direction away from the camera, we are unable to observe

23
00:01:56,259 --> 00:01:57,840
物体的运动。
the motion of the object.

24
00:01:57,840 --> 00:02:03,600
所以我们有一个可观察到的自由度，我们有一个不可观察的自由度。
So we have an observable degree of freedom and we have an un-observable degree of freedom.

25
00:02:03,600 --> 00:02:07,759
我们可以考虑这个问题的另一种方法是，使用相机，我们正在进行测量。
Another way we can think about this problem is that with the camera, we are making a measurement.

26
00:02:07,759 --> 00:02:14,150
它是一个测量u，v：图像平面中红色物体的坐标。所以我们已经
It’s a measurement u,v: the coordinate of the red object in the image plane. So we’ve

27
00:02:14,150 --> 00:02:19,690
有两个测量。我们正在测量两个数字，u和v。然后我们的任务发生在
got two measurements. We are measuring two numbers, u and v. Then our task occurs in

28
00:02:19,690 --> 00:02:25,220
三维空间：我们的任务有三个自由度。所以两次测量
three-dimensional space: our task has got three degrees of freedom. So two measurements

29
00:02:25,220 --> 00:02:29,410
不足以完成三个自由度的任务。
is insufficient to achieve a task with three degrees of freedom.

30
00:02:29,410 --> 00:02:34,860
现在，让我们考虑一下，我们用两台看看任务的相机来执行此操作
Now, let’s consider that we perform this with two cameras having a look at the task

31
00:02:34,860 --> 00:02:39,780
这已经完成了。这些相机有不同的观点。所以，如果我们表演
that’s being accomplished. These cameras have got different viewpoints. So if we perform

32
00:02:39,780 --> 00:02:45,290
一项任务，我们现在可以看到它在每个摄像机视图中的外观。这一次，任务正在进行中
a task, we can now see how it looks in each camera view. This time, the task is being

33
00:02:45,290 --> 00:02:49,739
实现正确。现在，我们正在对正在发生的事情进行四次测量。我们是
achieved correctly. Now, we are making four measurements about what’s going on. We are

34
00:02:49,739 --> 00:02:54,590
在一台相机中测量u和v。我们用另一台相机测量u和v。现在，我们已经
measuring u and v in one camera. We are measuring u and v with another camera. Now, we’ve

35
00:02:54,590 --> 00:03:00,790
得到四次测量，这足以完成三个自由度的任务。
got four measurements, and that is sufficient to achieve a task with three degrees of freedom.

36
00:03:00,790 --> 00:03:04,780
因此，为了完成任务，测量次数必须大于或等于
So in order to achieve a task, the number of measurements must be greater than or equal

37
00:03:04,780 --> 00:03:08,080
到自由度的数量。
to the number of degrees of freedom.

38
00:03:08,080 --> 00:03:12,730
很久以前，我们实际上建立了一个真正的机器人系统来做到这一点。现在，任务是
A long time ago, we actually built a real robot system to do this. Now, the task was

39
00:03:12,730 --> 00:03:18,950
将此处所示的工具插入地下采矿顶部的孔中
to insert a tool, which is shown here, in to a hole in the roof of an underground mining

40
00:03:18,950 --> 00:03:24,370
隧道。机器人工具尖端的每一侧都有一个摄像头，它正在观察
tunnel. There is a camera on each side of the robot’s tool tip and it’s observing

41
00:03:24,370 --> 00:03:28,799
屋顶上的洞;你可以看到这里显示为绿色区域。那是什么
the hole in the roof; and you can see that shown here as the green region. And what the

42
00:03:28,799 --> 00:03:33,890
控制系统正在做的是将工具的尖端带到绿色区域的中心
control system is doing is to bring the tip of the tool to the centre of the green region

43
00:03:33,890 --> 00:03:40,750
同时在两个摄像头视图中。如果它这样做，则意味着隐含
simultaneously in both camera views. And if it does that, then it means that implicitly

44
00:03:40,750 --> 00:03:45,849
该工具已被放入采矿隧道顶部的洞中。
the tool has been put in to the hole in the roof of the mining tunnel.

45
00:03:45,849 --> 00:03:51,970
让我们回顾一下基于视觉的控制与传统机器人控制之间的区别。
Let’s recap on the difference between vision-based control and conventional robot control.

46
00:03:51,970 --> 00:03:57,819
在传统的机器人控制中，观察机器人的末端执行器的姿势
In conventional robot control, the observation of the pose of the robot’s end effector

47
00:03:57,819 --> 00:04:03,040
是间接的。我们使用测量关节角度的传感器，我们使用运动学
is indirect. We use sensors that measure the angles of the joints, and we use a kinematic

48
00:04:03,040 --> 00:04:08,900
用于计算机器人末端所在位置的模型。所以这只是推断。
model to compute where the end of the robot is. So it is just inferred.

49
00:04:08,900 --> 00:04:14,310
我们还需要告诉对象在笛卡尔空间中的位置，然后是任务
We also need to be told the position of the object in Cartesian space and then the task

50
00:04:14,310 --> 00:04:19,250
控制器的作用是将机器人末端执行器的推断位置带到
of the controller is to bring the inferred position of the robot’s end effector to

51
00:04:19,250 --> 00:04:22,430
我们事先知道的物体的位置。
the position of the object which we know in advance.

52
00:04:22,430 --> 00:04:28,030
相反，基于视觉的控制是直接观察工具和物体，
Vision-based control by contrast is direct observation of the tool, and of the object,

53
00:04:28,030 --> 00:04:32,970
以及这两件事之间的错误。在基于视觉的控制中，我们尝试并开车
and of the error between those two things. In vision-based control, we try and drive

54
00:04:32,970 --> 00:04:38,310
该错误为零。我们实际上并不知道对象的姿势。我们实际上并没有
that error to zero. We don’t actually know the pose of the object. We don’t actually

55
00:04:38,310 --> 00:04:43,550
知道机器人工具的姿势。我们只是观察错误并将其驱动为零。
know the pose of the robot’s tool. We simply observe the error and drive that to zero.

56
00:04:43,550 --> 00:04:47,060
这种技术通常称为视觉伺服。
This is a technique that’s commonly called visual servoing.

57
00:04:47,060 --> 00:04:52,160
视觉伺服有许多潜在的用途。例如，在制造业务中，
There are many potential uses of visual servoing. For instance, in a manufacturing operation,

58
00:04:52,160 --> 00:04:56,940
我们可能需要拾取随机放置在传送带上的物体。视觉伺服
we may need to pick up objects that are randomly placed on a conveyor belt. Visual servoing

59
00:04:56,940 --> 00:05:01,490
可以引导机器人的尖端在它们移动过去时拾取这些物体。它
could guide the tip of a robot to pick up these objects as they are moving past. It

60
00:05:01,490 --> 00:05:06,330
也可以用来抓住在架空传输线上摆动的物体
could also be used to grab objects which are swinging on an overhead transfer line for

61
00:05:06,330 --> 00:05:11,550
例。它可以用于交配任务，也许可以将加油喷嘴放入汽车，
example. It could be used for a mating task, perhaps to put fueling nozzle in to a car,

62
00:05:11,550 --> 00:05:14,440
进入航天器或飞机。
into a spacecraft, or an aircraft.

63
00:05:14,440 --> 00:05:19,639
考虑像水果采摘这样的问题。我们不知道每个的x，y和z位置
Consider a problem like fruit picking. We don’t know the x, y, and z location of every

64
00:05:19,639 --> 00:05:24,080
苹果在果园里。也许，我们甚至不知道机器人的位置
apple in the orchard. Perhaps, we don’t even know the location of the robot within

65
00:05:24,080 --> 00:05:28,919
果园。但是使用这种视觉控制策略，机器人可以伸出并减少
the orchard. But using this visual control strategy, a robot can reach out and reduce

66
00:05:28,919 --> 00:05:34,000
其工具提示与苹果之间的误差为零。在这种情况下，它已经实现了
the error between its tool tip and an apple to zero. In which case, then it has achieved

67
00:05:34,000 --> 00:05:37,440
掌握那种水果，可以把它从树上取下来。
a grasp of that fruit and can remove it from the tree.

68
00:05:37,440 --> 00:05:42,080
我们可以考虑将飞机降落在跑道上的问题。我们观察跑道。
We could consider the problem of landing an aircraft on a runway. We observe the runway.

69
00:05:42,080 --> 00:05:47,050
我们可以看到一些非常明显的视觉特征：一些漂亮的白线，一些漂亮的白色
We can see some very obvious visual features there: some nice white lines, some nice white

70
00:05:47,050 --> 00:05:52,940
矩形，我们可以用它来控制飞机，使其高度超过
rectangles, and we could use those to control the aircraft so that its height above the

71
00:05:52,940 --> 00:05:56,940
跑道在与跑道对齐时变为零。
runway becomes zero while being aligned with that runway.

72
00:05:56,940 --> 00:06:02,610
它可以用于将水下机器人保持在固定的位置，尽管有海洋
It could be used for keeping an underwater robot at a fixed location despite an ocean

73
00:06:02,610 --> 00:06:06,550
目前试图将其从想要的地方推开。它可以用来指导
current trying to push it away from where it wants to be. It could be used to guide

74
00:06:06,550 --> 00:06:11,630
水下机器人跟随水下管道。它可以用于像
an underwater robot following an underwater pipeline. It could be used for tasks like

75
00:06:11,630 --> 00:06:16,600
杂耍等等。基于视觉的控制的应用几乎是无限的。
juggling and so on. The applications of vision-based control are almost limitless.

