1
00:00:03,199 --> 00:00:08,149
本讲座为您提供了一些先进的图像处理操作，但是
This lecture's given you a flavour of some advanced image processing operations, but

2
00:00:08,149 --> 00:00:12,059
真的只是触及了一些这些技术。所以，如果他们引起了你的兴趣，
really only just touched on some of these techniques. So if they've piqued your interest,

3
00:00:12,059 --> 00:00:17,260
然后我建议你去做一些额外的阅读并试验一些代码
then I suggest you go off and do some additional reading and experiment with some of the code

4
00:00:17,260 --> 00:00:19,570
这是在工具箱中提供的。
that's provided in the toolbox.

5
00:00:19,570 --> 00:00:24,420
我们看到的第一种技术是数学形态学，但这一次是
The first technique that we looked at was mathematical morphology, but this time with

6
00:00:24,420 --> 00:00:29,340
更复杂的结构元素。所以我们谈到了如何使用形态学操作
more complex structuring elements. So we talked about how we can use morphological operations

7
00:00:29,340 --> 00:00:35,380
检测图像中具有特定斜率的线。实际上，我们可以创建相当复杂
to detect lines with a particular slope within an image. We can actually create quite complex

8
00:00:35,380 --> 00:00:36,380
结构元素。
structuring elements.

9
00:00:36,380 --> 00:00:41,649
我们还讨论了一个结构元素包含一个圆圈的例子，我们使用了它
We also discussed an example where the structuring element contained a circle and we used that

10
00:00:41,649 --> 00:00:48,160
重建一个对象的一些缺失部分;番茄果实，我们知道它本质上是
to reconstruct some missing parts of an object; a tomato fruit, which we know is essentially

11
00:00:48,160 --> 00:00:49,160
圆。
circular.

12
00:00:49,160 --> 00:00:54,129
我们简要地看了一下命中和未命中变换。我们可以将它用于操作
We looked very briefly at the hit and miss transform. We can use that for operations

13
00:00:54,129 --> 00:01:00,480
比较骨架化并找到许多线段的交点。
like skeletonization and finding the intersection points of a number of line segments.

14
00:01:00,480 --> 00:01:06,110
我们介绍了Hough变换，这是一种众所周知的寻找线性特征的技术
We introduced the Hough Transform, a well-known technique of finding linear features within

15
00:01:06,110 --> 00:01:12,180
一个图像。为了使用Hough变换，我们引入了替代参数化
an image. In order to use the Hough Transform, we introduced an alternative parameterization

16
00:01:12,180 --> 00:01:13,420
的线条。
of lines.

17
00:01:13,420 --> 00:01:18,310
它通常不被称为线的极地形式。每条线都用。来描述
It's not often known as the Polar Form of a Line. Each line is described in terms of

18
00:01:18,310 --> 00:01:25,360
周边的Theta和Rho。位于图像边缘的每个点都投票给一个大的
the perimeter Theta and Rho. Each point that lays on an edge of an image, votes for a large

19
00:01:25,360 --> 00:01:31,470
行数。这些投票在累加器数组中计算。收到的行
number of lines. Those votes are tallied in an accumulator array. The lines that receive

20
00:01:31,470 --> 00:01:36,740
然后，最多的票数是场景中的主导线;他们得到了支持
the largest number of votes then are dominant lines in the scene; they are supported by

21
00:01:36,740 --> 00:01:42,380
大量的边缘像素和这样的线已经在图像上以图形方式重叠
a large number of edge pixels and such lines have been overlaid graphically on the image

22
00:01:42,380 --> 00:01:44,130
在这里的教堂。
of the church here.

23
00:01:44,130 --> 00:01:50,350
最后，我们讨论了找到相应的观点。你和我很容易找到
Finally we talked about finding corresponding points. It's very easy for you and me to find

24
00:01:50,350 --> 00:01:55,720
这个阳台角落的坐标在两张截然不同的照片中
the coordinate of this balcony corner in two quite different pictures of that same

25
00:01:55,720 --> 00:02:00,110
场景，但计算机算法并不那么容易。
scene, but it's not so easy for a computer algorithm to do that.

26
00:02:00,110 --> 00:02:04,950
我们还谈到了我们不能仅仅依赖于灰度强度的问题
We also touched on the problem that we can't just rely on the grey scale intensity of the

27
00:02:04,950 --> 00:02:08,170
像素在另一个场景中找到它。
pixel to find it in the other scene.

28
00:02:08,170 --> 00:02:13,450
为了解决这个问题，我们引入了角点检测器的概念，它说
In order to solve this problem we introduced the notion of a Corner Detector, which says

29
00:02:13,450 --> 00:02:19,170
关于图像区域与图像的相邻区域的相似性的事物。
something about the similarity of a region of an image, to adjacent regions of the image.

30
00:02:19,170 --> 00:02:24,260
我们可以将其归结为一个非常有用的二乘二矩阵，称为结构张量。
We can boil this down to a very useful two by two matrix called the Structure Tensor.

31
00:02:24,260 --> 00:02:30,099
这告诉我们很多关于图像强度表面的局部形状
And that tells us a lot about the local shape of the intensity surface of the image at this

32
00:02:30,099 --> 00:02:35,200
特别的一点。我们可以使用该矩阵的特征值来确定该区域是否存在
particular point. We can use the Eigenvalues of this matrix to determine whether this region

33
00:02:35,200 --> 00:02:39,690
图像是平坦的还是恒定的，无论它是否包含边缘或是否包含
of the image is flat or constant, whether it contains and edge or whether it contains

34
00:02:39,690 --> 00:02:40,690
一个顶峰。
a peak.

35
00:02:40,690 --> 00:02:45,450
从水平和垂直梯度非常容易地计算结构张量
The structure tensor is very easily computed from the horizontal and vertical gradient

36
00:02:45,450 --> 00:02:51,030
用高斯内核平滑的图像。这些都是我们之前遇到过的技术。
images smoothed with a Gaussian Kernel. These are all techniques that we've met previously.

37
00:02:51,030 --> 00:02:55,989
两种常见的角点检测器算法然后使用稍微不同的技术来查找
Two common corner detector algorithms then use slightly different techniques to find

38
00:02:55,989 --> 00:02:59,360
两个特征值都很大的那些点。
those points where both Eigenvalues are large.

39
00:02:59,360 --> 00:03:04,489
最后，我们讨论了功能匹配。鉴于我有一组角点
Finally, we talked about feature matching. Given that I had a set of corner points in

40
00:03:04,489 --> 00:03:09,260
一个图像，另一个图像中的一组角点，我在每个图像周围采用一个像素区域
one image, a set of corner points in another image, I take a region of pixels around each

41
00:03:09,260 --> 00:03:16,920
在那些兴趣点中，并查看那些图像区域的相似性以确定对应关系
of those interest points and look at the similarity of those image regions to determine the correspondence

42
00:03:16,920 --> 00:03:19,409
在两个图像中的点之间。
between points in the two images.

