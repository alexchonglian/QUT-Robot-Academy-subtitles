1
00:00:03,770 --> 00:00:07,880
让我们总结一下我们从获取图像中学到的一些关键事项
Let’s summarise some of the key things that we have learned about getting images from

2
00:00:07,880 --> 00:00:12,789
将世界变成一台可以用MATLAB操作它们的计算机。
the world into a computer where we can manipulate them with MATLAB.

3
00:00:12,789 --> 00:00:19,010
我们已经查看了一些关于如何从文件加载图像的示例;加载图片
We have looked at a number of examples about how we can load images from a file; load images

4
00:00:19,010 --> 00:00:24,890
住在相机旁;从其他人的相机加载图像，连接到网络摄像头
live from a camera; load images from somebody else’s camera, a web camera attached to

5
00:00:24,890 --> 00:00:30,130
这个星球上的某个地方;如何从电影文件加载帧我们可以
the internet somewhere on the planet; how to load frames from a movie file and we can

6
00:00:30,130 --> 00:00:34,890
甚至从谷歌地球等在线互联网服务中加载帧。
even load frames from an online internet service like Google Earth.

7
00:00:34,890 --> 00:00:40,750
您将注意到所有这些不同的方法是有一些共同的模式
What you will notice about all of these different approaches is that there’s some common patterns

8
00:00:40,750 --> 00:00:47,079
这里。我们创建一个可能是摄像机对象或轴的图像源对象
here. We create an image source object that might be a video camera object or an Axis

9
00:00:47,079 --> 00:00:52,420
网络摄像头对象或电影对象，然后我们使用该对象的方法之一，
web camera object or movie object and then we use one of the methods of that object,

10
00:00:52,420 --> 00:00:59,079
抓取方法，从该图像源获取下一个图像。所以我们能够
the grab method, to obtain the next image from that image source. So we are able to

11
00:00:59,079 --> 00:01:05,080
使用仅变化非常非常的软件来抓取图像的各种图像源
grab images a diversity of image sources, using software which varies only very, very

12
00:01:05,080 --> 00:01:09,329
小。现在我们将图像放入MATLAB中
little. Now once we have the image into the MATLAB

13
00:01:09,329 --> 00:01:17,249
环境由矩阵表示;通过矩形数组。每个元素
environment it is represented by a matrix; by a rectangular array of numbers. Every element

14
00:01:17,249 --> 00:01:23,119
在该数组中表示在该对应点的光强度
within that array represents the intensity of light at the corresponding point in the

15
00:01:23,119 --> 00:01:27,529
真实世界。我们将这些元素称为图片元素，
real world. We refer to these elements as picture elements,

16
00:01:27,529 --> 00:01:34,140
通常缩小为像素。像素的位置由两个坐标定义。
which is often contracted to pixel. The position of a pixel is defined by two coordinates.

17
00:01:34,140 --> 00:01:40,340
由符号u表示的水平坐标是距左手的距离
The horizontal coordinate which I denote by the symbol u, is the distance from the left-hand

18
00:01:40,340 --> 00:01:45,000
边缘和我用符号v定义的垂直坐标定义为
edge, and the vertical coordinate which I define by the symbol v, is defined as the

19
00:01:45,000 --> 00:01:51,679
距离左上角的距离。MATLAB是一个计算环境
distance from the top left-hand corner. MATLAB is a computational environment for

20
00:01:51,679 --> 00:01:56,130
处理矩阵，矩阵的约定是我们用它来索引它们
dealing with matrices, and the convention for matrices is that we index them using the

21
00:01:56,130 --> 00:02:03,859
行索引首先跟着列索引。现在行是垂直坐标和
row index first followed by the column index. Now the row is the vertical coordinate and

22
00:02:03,859 --> 00:02:09,550
列是水平坐标。所以在正常方式之间有一个翻转
the column is the horizontal coordinate. So there is a flip here between the normal way

23
00:02:09,550 --> 00:02:15,910
我们表示矩形框架或图形中的坐标。通常我们会参考
that we represent the coordinates in a rectangular frame or in a graph. Normally we would reference

24
00:02:15,910 --> 00:02:21,580
水平坐标后跟垂直坐标-我们会写u，vas
the horizontal coordinate followed by the vertical coordinate—we would write u,v as

25
00:02:21,580 --> 00:02:27,040
像素的坐标。在MATLAB中，因为我们要索引到矩阵，所以我们必须反转
the coordinate of a pixel. In MATLAB, because we are indexing into a matrix we have to reverse

26
00:02:27,040 --> 00:02:33,000
所以我们会写v，你。现在这令人困惑，这有点像
that so we would write v,u. Now this is confusing and it is a bit of a

27
00:02:33,000 --> 00:02:37,760
陷阱刚刚开始的人。记住那个非常重要
trap for people who are just starting out. It is really important to remember that the

28
00:02:37,760 --> 00:02:43,091
索引矩阵时的坐标与坐标相比是反转的
coordinates when you are indexing a matrix are reversed compared to the coordinates that

29
00:02:43,091 --> 00:02:46,910
当你想到一个二维平面时，你会用。
you would use when you think about a two dimensional plane.

